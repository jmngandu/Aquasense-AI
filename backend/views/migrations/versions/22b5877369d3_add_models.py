"""add models

Revision ID: 22b5877369d3
Revises: bc5277dac205
Create Date: 2024-07-20 15:19:06.967477

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '22b5877369d3'
down_revision = 'bc5277dac205'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('waste',
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('id_waste', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('image_waste', sa.String(length=255), nullable=True),
    sa.Column('is_checked', sa.Boolean(), nullable=True),
    sa.Column('id_user', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_user'], ['user.id_user'], ),
    sa.PrimaryKeyConstraint('id_waste')
    )
    op.create_table('waste_checkers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('waste_id', sa.Integer(), nullable=False),
    sa.Column('responsible_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['responsible_id'], ['responsible.id_responsible'], ),
    sa.ForeignKeyConstraint(['waste_id'], ['waste.id_waste'], ),
    sa.PrimaryKeyConstraint('id', 'waste_id', 'responsible_id')
    )
    op.create_table('waste_notification',
    sa.Column('id_notification', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('id_waste', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_waste'], ['waste.id_waste'], ),
    sa.PrimaryKeyConstraint('id_notification')
    )
    op.create_table('waste_notification_receivers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('waste_notification_id', sa.Integer(), nullable=True),
    sa.Column('responsible_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['responsible_id'], ['responsible.id_responsible'], ),
    sa.ForeignKeyConstraint(['waste_notification_id'], ['waste_notification.id_notification'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('waste_notification_views',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('waste_notification_id', sa.Integer(), nullable=True),
    sa.Column('responsible_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['responsible_id'], ['responsible.id_responsible'], ),
    sa.ForeignKeyConstraint(['waste_notification_id'], ['waste_notification.id_notification'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('water_shortage_notification', schema=None) as batch_op:
        batch_op.drop_constraint('water_shortage_notification_ibfk_1', type_='foreignkey')
        batch_op.drop_column('id_responsible')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('water_shortage_notification', schema=None) as batch_op:
        batch_op.add_column(sa.Column('id_responsible', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('water_shortage_notification_ibfk_1', 'responsible', ['id_responsible'], ['id_responsible'])

    op.drop_table('waste_notification_views')
    op.drop_table('waste_notification_receivers')
    op.drop_table('waste_notification')
    op.drop_table('waste_checkers')
    op.drop_table('waste')
    # ### end Alembic commands ###
