"""add models

Revision ID: 4f14a3ef1789
Revises: 
Create Date: 2024-07-20 11:33:38.543103

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4f14a3ef1789'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('subscription',
    sa.Column('id_subscription', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('version', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('validity_in_month', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id_subscription')
    )
    op.create_table('super_admin',
    sa.Column('username', sa.String(length=150), nullable=False),
    sa.Column('profile', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('id_superadmin', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id_superadmin'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('user',
    sa.Column('username', sa.String(length=150), nullable=False),
    sa.Column('profile', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('id_user', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id_user'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('water_shortage',
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('id_water_shortage', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('flow_rate', sa.Float(), nullable=True),
    sa.Column('quality', sa.String(length=50), nullable=True),
    sa.Column('quantity', sa.Float(), nullable=True),
    sa.Column('last_alert', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id_water_shortage')
    )
    op.create_table('responsible',
    sa.Column('id_user', sa.Integer(), nullable=False),
    sa.Column('id_subscription', sa.Integer(), nullable=True),
    sa.Column('is_activated', sa.Boolean(), nullable=True),
    sa.Column('activity_type', sa.String(length=100), nullable=False),
    sa.Column('activity_domain', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('last_subscription', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['id_subscription'], ['subscription.id_subscription'], ),
    sa.ForeignKeyConstraint(['id_user'], ['user.id_user'], ),
    sa.PrimaryKeyConstraint('id_user')
    )
    op.create_table('waste',
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('id_waste', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('image_waste', sa.String(length=255), nullable=True),
    sa.Column('is_checked', sa.Boolean(), nullable=True),
    sa.Column('id_user', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_user'], ['user.id_user'], ),
    sa.PrimaryKeyConstraint('id_waste')
    )
    op.create_table('waste_checkers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('waste_id', sa.Integer(), nullable=False),
    sa.Column('responsible_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['responsible_id'], ['responsible.id_user'], ),
    sa.ForeignKeyConstraint(['waste_id'], ['waste.id_waste'], ),
    sa.PrimaryKeyConstraint('id', 'waste_id', 'responsible_id')
    )
    op.create_table('waste_notification',
    sa.Column('id_notification', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('id_responsible', sa.Integer(), nullable=True),
    sa.Column('id_waste', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_responsible'], ['responsible.id_user'], ),
    sa.ForeignKeyConstraint(['id_waste'], ['waste.id_waste'], ),
    sa.PrimaryKeyConstraint('id_notification')
    )
    op.create_table('water_shortage_checkers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('water_shortage_id', sa.Integer(), nullable=False),
    sa.Column('responsible_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['responsible_id'], ['responsible.id_user'], ),
    sa.ForeignKeyConstraint(['water_shortage_id'], ['water_shortage.id_water_shortage'], ),
    sa.PrimaryKeyConstraint('id', 'water_shortage_id', 'responsible_id')
    )
    op.create_table('water_shortage_notification',
    sa.Column('id_notification', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('id_responsible', sa.Integer(), nullable=True),
    sa.Column('id_water_shortage', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_responsible'], ['responsible.id_user'], ),
    sa.ForeignKeyConstraint(['id_water_shortage'], ['water_shortage.id_water_shortage'], ),
    sa.PrimaryKeyConstraint('id_notification')
    )
    op.create_table('waste_notification_receivers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('waste_notification_id', sa.Integer(), nullable=False),
    sa.Column('responsible_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['responsible_id'], ['responsible.id_user'], ),
    sa.ForeignKeyConstraint(['waste_notification_id'], ['waste_notification.id_notification'], ),
    sa.PrimaryKeyConstraint('id', 'waste_notification_id', 'responsible_id')
    )
    op.create_table('waste_notification_views',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('waste_notification_id', sa.Integer(), nullable=False),
    sa.Column('responsible_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['responsible_id'], ['responsible.id_user'], ),
    sa.ForeignKeyConstraint(['waste_notification_id'], ['waste_notification.id_notification'], ),
    sa.PrimaryKeyConstraint('id', 'waste_notification_id', 'responsible_id')
    )
    op.create_table('water_shortage_notification_receivers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('water_shortage_notification_id', sa.Integer(), nullable=False),
    sa.Column('responsible_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['responsible_id'], ['responsible.id_user'], ),
    sa.ForeignKeyConstraint(['water_shortage_notification_id'], ['water_shortage_notification.id_notification'], ),
    sa.PrimaryKeyConstraint('id', 'water_shortage_notification_id', 'responsible_id')
    )
    op.create_table('water_shortage_notification_views',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('water_shortage_notification_id', sa.Integer(), nullable=False),
    sa.Column('responsible_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['responsible_id'], ['responsible.id_user'], ),
    sa.ForeignKeyConstraint(['water_shortage_notification_id'], ['water_shortage_notification.id_notification'], ),
    sa.PrimaryKeyConstraint('id', 'water_shortage_notification_id', 'responsible_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('water_shortage_notification_views')
    op.drop_table('water_shortage_notification_receivers')
    op.drop_table('waste_notification_views')
    op.drop_table('waste_notification_receivers')
    op.drop_table('water_shortage_notification')
    op.drop_table('water_shortage_checkers')
    op.drop_table('waste_notification')
    op.drop_table('waste_checkers')
    op.drop_table('waste')
    op.drop_table('responsible')
    op.drop_table('water_shortage')
    op.drop_table('user')
    op.drop_table('super_admin')
    op.drop_table('subscription')
    # ### end Alembic commands ###
